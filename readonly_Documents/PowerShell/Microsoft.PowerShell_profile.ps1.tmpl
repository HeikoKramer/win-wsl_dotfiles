# Generated by chezmoi from common/shortcuts.yml and common/functions.yml

$ErrorActionPreference = "Stop"
Set-Location $HOME
if (-not $env:DOTFILES) { $env:DOTFILES = "E:\Configs\dotfiles" }

if (-not $env:DOTFILES_PROFILE_AUTOUPDATED) {
  $env:DOTFILES_PROFILE_AUTOUPDATED = '1'
  if (Get-Command chezmoi -ErrorAction SilentlyContinue) {
    try {
      $updateOutput = chezmoi update 2>&1
      if ($LASTEXITCODE -eq 0) {
        if ($updateOutput) { Write-Verbose $updateOutput }
        . $PROFILE
        return
      } else {
        Write-Warning "chezmoi update failed:`n$updateOutput"
      }
    } catch {
      Write-Warning "chezmoi update failed: $_"
    }
  }
}

# chezmoi environment-variable
try { $env:CHEZMOI_SOURCE_DIR = (chezmoi source-path) } catch {}

# Set default editors
function Edit-File {
  param([Parameter(Mandatory)] [string]$Path)
  $editor = $env:EDITOR
  if (-not $editor) {
    if (Get-Command code -ErrorAction SilentlyContinue)      { $editor = 'code' }
    elseif (Get-Command 'notepad++' -ErrorAction SilentlyContinue) { $editor = 'notepad++' }
    else                                                     { $editor = 'notepad' }
  }
  & $editor $Path
}

# --- Load shortcuts from YAML ---
{{ $shortcuts := (include "common/shortcuts.yml" | fromYaml) }}
{{ $functions := (include "common/functions.yml" | fromYaml) }}
{{ $shortcutFunctionRefs := dict }}
{{ range $shortcuts }}
  {{- if and .cmd (hasKey .cmd "fromFunctions") -}}
    {{- $_ := set $shortcutFunctionRefs .name true -}}
  {{- end -}}
{{ end }}
$Shortcuts = @(
{{ range $shortcuts }}
    [pscustomobject]@{
        name = "{{ .name }}"
        cat  = "{{ .cat }}"
        desc = "{{ .desc }}"
        cmd  = {{- if and .cmd (hasKey .cmd "fromFunctions") -}} '[function]'
       {{- else if and (hasKey .cmd "win")   (eq $.chezmoi.os "windows") -}} '{{ index .cmd "win" }}'
       {{- else if and (hasKey .cmd "linux") (eq $.chezmoi.os "linux")   -}} '{{ index .cmd "linux" }}'
       {{- else if hasKey .cmd "both" -}} '{{ index .cmd "both" }}'
       {{- else -}} '' {{- end }}
    };
{{ end }}
)

# --- Attach function helpers from YAML ---
{{ range $functions }}
{{- if .win }}
{{- if not (hasKey $shortcutFunctionRefs .name) }}
$Shortcuts += [pscustomobject]@{
    name = "{{ .name }}"
    cat  = "{{ .cat }}"
    desc = "{{ .desc }}"
    cmd  = '[function]'
}
{{- end }}
Set-Item -Path "function:{{ .name }}" -Value ([scriptblock]::Create(@'
{{ .win | nindent 0 }}
'@)) -Force
{{- end }}
{{ end }}

# --- Register shortcut functions ---
foreach ($s in $Shortcuts) {
    if ([string]::IsNullOrWhiteSpace($s.cmd)) { continue }
    if ($s.cmd -eq '[function]') { continue }
    Set-Item -Path "function:$($s.name)" -Value ([scriptblock]::Create($s.cmd)) -Force
}

# --- Overview: shortcuts [CATEGORY] ---
function shortcuts {
    param([string]$Category)
    $Shortcuts
      | Where-Object { $_.cmd -and (!$Category -or $_.cat -eq $Category) }
      | Sort-Object cat,name
      | Select-Object name,cat,desc,cmd
      | Format-Table -AutoSize
}

try { Start-Service ssh-agent -ErrorAction SilentlyContinue | Out-Null } catch {}

function Show-DotfilesVersion {
  $version = 'unknown'
  $branch = $null

  if ($env:DOTFILES -and (Test-Path (Join-Path $env:DOTFILES '.git'))) {
    if (Get-Command git -ErrorAction SilentlyContinue) {
      try {
        $version = git -C $env:DOTFILES rev-parse --short HEAD 2>$null
        $branch  = git -C $env:DOTFILES rev-parse --abbrev-ref HEAD 2>$null
      } catch {}
    }
  }

  if ($branch -and $branch -ne 'HEAD') {
    $version = "$branch@$version"
  }

  Write-Host "Dotfiles version (Windows): $version"
}

Show-DotfilesVersion
Write-Host "Profile loaded. 'shortcuts' lists everything, 'shortcuts DIRS' filters."
